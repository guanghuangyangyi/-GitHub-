<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CacheManager.Microsoft.Extensions.Configuration</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions">
            <summary>
            Extensions for the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> to load <see cref="T:CacheManager.Core.CacheManagerConfiguration"/>s from <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Gets the first and only <see cref="T:CacheManager.Core.CacheManagerConfiguration"/> defined in
            the <code>cacheManagers</code> section of the provided <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The source configuration.</param>
            <returns>The <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</returns>
            <exception cref="T:System.InvalidOperationException">If no cacheManagers section is defined or more than one manager is configured.</exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfiguration(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Retrieve a <see cref="T:CacheManager.Core.CacheManagerConfiguration"/> defined in
            the <code>cacheManagers</code> section of the provided <paramref name="configuration"/> by <paramref name="name"/>.
            </summary>
            <returns>The <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>.</returns>
            <param name="configuration">The source configuration.</param>
            <param name="name">The name of the cache.</param>
            <exception cref="T:System.ArgumentNullException">
            If either <paramref name="configuration"/> or <paramref name="name"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If no <code>cacheManagers</code> section is defined in the <paramref name="configuration"/>,
            or if no configuration was found for the <paramref name="name"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfigurations(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Retrieves all configured <see cref="T:CacheManager.Core.CacheManagerConfiguration"/>s defined in
            the <code>cacheManagers</code> section of the provided <paramref name="configuration"/>.
            </summary>
            <param name="configuration">The source configuration.</param>
            <returns>The list of <see cref="T:CacheManager.Core.ICacheManagerConfiguration"/>s.</returns>
            <exception cref="T:System.InvalidOperationException">If no <code>cacheManagers</code> section is defined.</exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.LoadRedisConfigurations(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Loads all available Redis configurations from the the <code>redis</code> section of the provided <paramref name="configuration"/>.
            </summary>
            <remarks>
            This method always gets invoked by <see cref="M:Microsoft.Extensions.Configuration.MicrosoftConfigurationExtensions.GetCacheConfiguration(Microsoft.Extensions.Configuration.IConfiguration)"/> or the other overloads.
            You do not have to call this explicitly. The method also does not throw an exception if the <code>redis</code> section is
            not defined.
            </remarks>
            <param name="configuration">The source configuration.</param>
            <exception cref="T:System.InvalidOperationException">If the CacheManager.StackExchange.Redis package is not installed.</exception>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
             <summary>
            
             </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
             <summary>
            
             </summary>
             <param name="collection"></param>
             <param name="fromConfiguration"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
             <summary>
            
             </summary>
             <param name="collection"></param>
             <param name="fromConfiguration"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{CacheManager.Core.ConfigurationBuilder})">
             <summary>
            
             </summary>
             <param name="collection"></param>
             <param name="fromConfiguration"></param>
             <param name="configure"></param>
             <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddCacheManagerConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Action{CacheManager.Core.ConfigurationBuilder})">
             <summary>
            
             </summary>
             <param name="collection"></param>
             <param name="fromConfiguration"></param>
             <param name="name"></param>
             <param name="configure"></param>
             <returns></returns>
        </member>
    </members>
</doc>
